# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sortedListToBST(self, head: Optional[ListNode]) -> Optional[TreeNode]:
        nums=[]
        while head:
            nums.append(head.val)
            head=head.next
        def sol(nums):
            n=len(nums)
            if not n:
                return None
            mid=(n-1)//2
            root=TreeNode(nums[mid])
            root.left=(sol(nums[:mid]))
            root.right=(sol(nums[mid+1:]))
            return root
        return sol(nums)
